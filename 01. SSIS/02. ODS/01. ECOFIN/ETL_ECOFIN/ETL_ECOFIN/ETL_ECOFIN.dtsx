<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/31/2017 6:20:19 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="SRVSQLBI"
  DTS:CreatorName="OSATU\proyectobi2"
  DTS:DTSID="{0393C437-0E24-46EA-95DC-FCA4A3D5B5CC}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.4001.0"
  DTS:LocaleID="3082"
  DTS:ObjectName="ETL_ECOFIN"
  DTS:PackageType="5"
  DTS:VersionBuild="83"
  DTS:VersionGUID="{50C68B28-76EB-4F20-AC64-2B84FF300E8B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SRVSQLBI\VISESABI.VISESABI]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{6A8FAA23-A9FC-401C-B6FA-529E1B0B6DAC}"
      DTS:ObjectName="SRVSQLBI\VISESABI.VISESABI">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SRVSQLBI\VISESABI;Initial Catalog=VISESABI;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SRVSQLBI\VISESABI.VISESABI 1]"
      DTS:CreationName="MSOLAP100"
      DTS:DTSID="{6EE71113-930E-40EA-B284-D1629D2440CD}"
      DTS:ObjectName="SRVSQLBI\VISESABI.VISESABI 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SRVSQLBI\VISESABI;Initial Catalog=VISESABI;Provider=MSOLAP.7;Impersonation Level=Impersonate;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="SRVSQLBI\VISESABI.VISESABI"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Escribe entradas del registro sobre eventos en una base de datos de SQL Server"
      DTS:DTSID="{1B008F30-B726-48B2-96EC-03915D620653}"
      DTS:ObjectName="Proveedor de registro SSIS para SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E57455B5-1DC1-4736-B569-0CE30782F867}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_DBTIMESTAMP) (DT_WSTR,200)(DT_DBDATE)(&quot;31/05/2017&quot;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="F_CORTE">
      <DTS:VariableValue
        DTS:DataType="7">5/31/2017</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="2" />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Borra H_ECOFIN_AF"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Borra H_ECOFIN_AF"
      DTS:DTSID="{50D522E2-5050-4052-9B93-A87939E3A77B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Borra H_ECOFIN_AF"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6A8FAA23-A9FC-401C-B6FA-529E1B0B6DAC}"
          SQLTask:SqlStatementSource="delete from [dbo].[H_ECOFIN_AF] where id_af not like '999'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Borra H_ECOFIN_MOVIMIENTOS"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{a4936d44-6db8-4827-83eb-e4408e7e6b40}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Borra H_ECOFIN_MOVIMIENTOS"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6A8FAA23-A9FC-401C-B6FA-529E1B0B6DAC}"
          SQLTask:SqlStatementSource="truncate table [VISESABI].[dbo].[H_ECOFIN_MOVIMIENTOS]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Borra H_ECOFIN_SALDOS"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{57d72dd4-decb-4317-8414-97bfffbae5df}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Borra H_ECOFIN_SALDOS"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6A8FAA23-A9FC-401C-B6FA-529E1B0B6DAC}"
          SQLTask:SqlStatementSource="delete from [VISESABI].[dbo].[H_ECOFIN_SALDOS] where ID_MES=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::F_CORTE"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Borra H_INDICADORES"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Borra H_ECOFIN_AF"
      DTS:DTSID="{829ba23b-88b2-4d7d-9787-fa43ce3f83de}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Borra H_INDICADORES"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6A8FAA23-A9FC-401C-B6FA-529E1B0B6DAC}"
          SQLTask:SqlStatementSource="delete  from H_INDICADORES&#xA;&#x9;&#x9;where  ID_MES=?&#xA;&#x9;&#x9;and id_indicador in ( select id_indicador from m_indicadores m where m.id_ambito='ECOFIN' )" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::F_CORTE"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Borra V_ECOFIN_COMERCIAL"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{5c3775de-d4d7-4f05-a84d-147dc4fa4c8c}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Borra V_ECOFIN_COMERCIAL"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6A8FAA23-A9FC-401C-B6FA-529E1B0B6DAC}"
          SQLTask:SqlStatementSource="delete from [VISESABI].[dbo].[V_ECOFIN_COMERCIAL] where ID_MES=?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::F_CORTE"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Carga H_ECOFIN_AF"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Carga H_ECOFIN_AF"
      DTS:DTSID="{B6C98E93-8F96-4B12-9E66-B4073915EF89}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Carga H_ECOFIN_AF"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6A8FAA23-A9FC-401C-B6FA-529E1B0B6DAC}"
          SQLTask:SqlStatementSource="insert into [dbo].[H_ECOFIN_AF]&#xA;select db.[FA No_] as ID_AF,&#xA;le.[Depreciation Book Code] as COD_LIBRO_AMORT,&#xA;le.[Depreciation Starting Date] as F_INICIO_AMORT,&#xA;le.[Straight-Line _] as PORC_LINEAL,&#xA;le.[No_ of Depreciation Years] as NUM_ANIOS_AMORT,&#xA;le.[FA Posting Group] as ID_GR_CONT_NEGOCIO,&#xA;le.[Depreciation Ending Date] as F_FIN_AMORT,&#xA;coste.Amount as COSTE,&#xA;vcontable.Valorcontable -coste.Amount  as AMORTIZACION,&#xA; vcontable.Valorcontable as VALOR_CONTABLE,&#xA;db.[Acquisition Date] as F_ADQUISICION,&#xA;db.[G_L Acquisition Date] as F_ADQUISICION_CONTABLE,&#xA;db.[Disposal Date] as F_VENTA_BAJA,&#xA;db.[Last Acquisition Cost Date] as F_U_COSTE_ADQUISICION,&#xA;[Last Depreciation Date] as F_U_AMORT,&#xA;[Last Date Modified] as F_U_MODIF,&#xA;db.[Description] as DESC_ACTIVO_FIJO,&#xA;case when len([Global Dimension 1 Code])&lt;1 then null else [Global Dimension 1 Code] end as GRUPO_ASIGNACION_ACT,&#xA;case when len([Global Dimension 2 Code])&lt;1 then null else [Global Dimension 2 Code] end as UNIDAD_ASIGNACION_ACT,&#xA;le.[Depreciation Method] as ID_METODO_AMORTIZACION,&#xA;[FA Posting Type] as ID_TIPO_REGISTRO_AF,&#xA;[FA Posting Category] as ID_CATEGORIA_REGISTRO_AF&#xA;From  [dbo].[ZM_ECOFIN_FA_DEPRECIATION_BOOK] db&#xA;left join (select [FA No_],Amount,[Description]  from (select [FA No_], [G_L Entry No_],[Posting Date], [FA Posting Type], Amount,[Description] &#xA;, rank () over (partition by [FA No_] order by [G_L Entry No_]) as r&#xA; from [ZM_ECOFIN_FA_LEDGER_ENTRY]  where [FA Posting Type]=0) aux where r=1) coste   on(coste.[FA No_]=db.[FA No_] )&#xA;left join(select [FA No_],sum(Amount) as Valorcontable  from (select [FA No_], [G_L Entry No_],[Posting Date], [FA Posting Type], Amount&#xA;, rank () over (partition by [FA No_] order by [G_L Entry No_] ) as r&#xA; from [ZM_ECOFIN_FA_LEDGER_ENTRY]  ) aux group by [FA No_]) vcontable on(vcontable.[FA No_]=db.[FA No_] )&#xA; left join(select *  from (select [FA No_],&#xA;[Depreciation Book Code],&#xA;[Depreciation Starting Date],[Straight-Line _] ,&#xA;[No_ of Depreciation Years] ,&#xA;[FA Posting Group] ,&#xA;[Depreciation Ending Date] ,&#xA;[Global Dimension 1 Code] ,&#xA;[Global Dimension 2 Code] ,&#xA;[Property Class (Custom 1)] ,&#xA;[Gen_ Posting Type],&#xA;[Bal_ Account Type] ,&#xA;[Depreciation Method] ,&#xA;[FA Posting Type],&#xA;[FA Posting Category] ,&#xA;[Document Type] &#xA;, rank () over (partition by [FA No_] order by [G_L Entry No_] desc ) as r&#xA; from [ZM_ECOFIN_FA_LEDGER_ENTRY] led)  aux where r=1) le on(le.[FA No_]=db.[FA No_] )&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Carga H_ECOFIN_MOVIMIENTOS"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{a34a192f-3897-4abc-a405-60d733c72877}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Carga H_ECOFIN_MOVIMIENTOS"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6A8FAA23-A9FC-401C-B6FA-529E1B0B6DAC}"
          SQLTask:SqlStatementSource="declare @Fecha_Corte date&#xA;&#xA;set @Fecha_Corte=?&#xA;&#xA;insert into H_ECOFIN_MOVIMIENTOS&#xA; select &#xA;convert(date,CURRENT_TIMESTAMP,103) as F_MODIFICACION,&#xA;coalesce(replace([Source Type],'0','999'),'999') as ID_TIPO_PROCEDENCIA_MOV,&#xA;case when [FA Entry No_]&lt;&gt;0 then [Source No_] else '999' end as ID_AF,&#xA;coalesce(replace([Tipo gasto],'0','999'),'999') as ID_TIPO_GASTO,&#xA;coalesce(replace(gl.[Document Type],'0','999'),'999') as ID_TIPO_DOCUMENTO,&#xA;coalesce(replace(gl.[Gen_ Posting Type],'0','999'),'999') as ID_TIPO_IVA,&#xA;case when LTRIM(RTRIM(gl.[Tipo elemento])) &lt;&gt;0 then LTRIM(RTRIM(gl.[Tipo elemento]))-1 else 0 end as ID_TIPO_ELEMENTO,&#xA;coalesce(gl.[Bal_ Account Type],'999') as ID_TIPO_CONTRAPARTIDA,&#xA;coalesce([Residencia],'999') as ID_RESIDENCIA,&#xA;gl.[Posting Date] as F_REGISTRO,&#xA;gl.[Document No_] as COD_DOCUMENTO,&#xA;gl.[Description] as DESC_CODUMENTO,&#xA;coalesce(gl.[Bal_ Account No_],'999') as ID_CUENTA_CONTRAPARTIDA,&#xA;gl.[Amount] as SALDO,&#xA;gl.[VAT Amount] as IMPORTE_IVA,&#xA;gl.[Debit Amount] as IMPORTE_DEBE,&#xA;gl.[Credit Amount] as IMPORTE_HABER,&#xA;gl.[Document Date] as F_EMISION_DOCUMENTO,&#xA;gl.[External Document No_] as COD_DOCUMENTO_EXTERNO,&#xA;coalesce(gl.[G_L Account No_],'999') as ID_CUENTA,&#xA;replace(gl.[Source Code],'','999') as ID_ORIGEN_ENTRADA,&#xA;case when len(gl.[Gen_ Bus_ Posting Group])=0 then '999' else gl.[Gen_ Bus_ Posting Group] end as  ID_GR_CONT_NEGOCIO,&#xA;case when len(gl.[Gen_ Prod_ Posting Group])=0 then '999' else gl.[Gen_ Prod_ Posting Group] end as ID_GR_CONT_PRODUCTO,&#xA;case when len(gl.[No_ Series])=0 then '999' else [No_ Series] end as ID_NO_SERIES,&#xA;case when len(gl.[VAT Bus_ Posting Group])=0 then '999' else [VAT Bus_ Posting Group] end as ID_GR_IVA_NEGOCIO,&#xA;case when len(gl.[VAT Prod_ Posting Group])=0 then '999' else [VAT Prod_ Posting Group] end as ID_GR_IVA_PRODUCTO,&#xA;gl.[Source No_] as COD_PROC_ENTRADA,&#xA;gl.[Global Dimension 1 Code] as GRUPO_ASIGNACION_ACT,&#xA;gl.[Global Dimension 2 Code] as UNIDAD_ASIGNACION_ACT,&#xA;coalesce(ce.No_,'999') as ID_ELEMENTO,&#xA;case when len(substring(gl.[Global Dimension 2 Code],0,13))&lt;10 then '999' else substring(gl.[Global Dimension 2 Code],0,13)end as ID_PROMOCION,&#xA;gl.[Identifica cobro subvención] as COBRO_SUBVENCION,&#xA;gl.[Global Dimension 5 Code] as CONTRATO_PROGRAMA&#xA;FROM ZM_ECOFIN_G_L_Entry gl&#xA;left join V_ZM_COMERCIAL_ELEMENTO ce on (substring(gl.[Global Dimension 2 Code],0,13)=ce.[No_ promocion]and LTRIM(RTRIM(replace(gl.[Tipo elemento],0,1)-1))=ce.[Tipo elemento] and gl.[Global Dimension 6 Code]=ce.[No_ interno] )&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::F_CORTE"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Carga H_ECOFIN_SALDOS"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{645c9a46-e5fe-4a9e-9265-e6474ffe3146}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Carga H_ECOFIN_SALDOS"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6A8FAA23-A9FC-401C-B6FA-529E1B0B6DAC}"
          SQLTask:SqlStatementSource="&#xA;declare @Fecha_Corte date&#xA;&#xA;set @Fecha_Corte=?&#xA;&#xA;&#xA;insert into H_ECOFIN_SALDOS&#xA;select F_MODIFICACION,&#xA; ID_MES  as ID_MES,&#xA;ID_CUENTA, &#xA;sum(IMPORTE_DEBE_PERIODO) as IMPORTE_DEBE_PERIODO, &#xA;sum(IMPORTE_HABER_PERIODO) as IMPORTE_HABER_PERIODO,&#xA;sum(SALDO_PERIODO) as SALDO_PERIODO,&#xA;sum(IMPORTE_DEBE) as IMPORTE_DEBE,&#xA;sum(IMPORTE_HABER) as IMPORTE_HABER,&#xA;sum(SALDO) as SALDO,&#xA;sum(IMPORTE_DEBE_MES) as IMPORTE_DEBE_MES,&#xA;sum(IMPORTE_HABER_MES) as IMPORTE_HABER_MES,&#xA;sum(SALDO_MES) as SALDO_MES&#xA;from(select F_MODIFICACION as F_MODIFICACION,&#xA; @Fecha_Corte as ID_MES,&#xA;ID_CUENTA as ID_CUENTA,&#xA;case when F_REGISTRO between convert(date,'01/01/'+convert(varchar,year( @Fecha_Corte)),103) and  @Fecha_Corte then sum(IMPORTE_DEBE) else 0 end as  IMPORTE_DEBE_PERIODO,&#xA;case when F_REGISTRO between convert(date,'01/01/'+convert(varchar,year( @Fecha_Corte)),103) and  @Fecha_Corte then sum(IMPORTE_HABER) else 0 end as IMPORTE_HABER_PERIODO,&#xA;case when F_REGISTRO between convert(date,'01/01/'+convert(varchar,year( @Fecha_Corte)),103) and  @Fecha_Corte then sum(SALDO) else 0 end as SALDO_PERIODO,&#xA;sum(IMPORTE_DEBE) as IMPORTE_DEBE,&#xA;sum(IMPORTE_HABER) as IMPORTE_HABER,&#xA;sum(SALDO)  as SALDO,&#xA;case when F_REGISTRO between convert(date,'01/'+convert(varchar,month( @Fecha_Corte))+'/' +convert(varchar,year( @Fecha_Corte)),103) and  @Fecha_Corte then sum(IMPORTE_DEBE) else 0 end as IMPORTE_DEBE_MES,&#xA;case when F_REGISTRO between convert(date,'01/'+convert(varchar,month( @Fecha_Corte))+'/' +convert(varchar,year( @Fecha_Corte)),103) and  @Fecha_Corte then sum(IMPORTE_HABER) else 0 end as IMPORTE_HABER_MES,&#xA;case when F_REGISTRO between convert(date,'01/'+convert(varchar,month( @Fecha_Corte))+'/' +convert(varchar,year( @Fecha_Corte)),103) and  @Fecha_Corte then sum(SALDO) else 0 end as SALDO_MES&#xA;from h_ecofin_movimientos mov&#xA;group by   F_MODIFICACION,&#xA; ID_CUENTA, F_REGISTRO) aux group by   F_MODIFICACION,&#xA; ID_MES,&#xA;ID_CUENTA&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::F_CORTE"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Carga H_INDICADORES_BAL_ACU_MASAS_1_2"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Carga H_ECOFIN_AF"
      DTS:DTSID="{7f95522f-1e4f-4383-b877-6549c501ae67}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Carga H_INDICADORES_BAL_ACU_MASAS_1_2"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6A8FAA23-A9FC-401C-B6FA-529E1B0B6DAC}"
          SQLTask:SqlStatementSource="declare @Fecha_Corte date, @NUM_PER int&#xA;&#xA;set @Fecha_Corte=?&#xA;set @NUM_PER=(select case when month(@Fecha_Corte)=3 then 3&#xA;   when month(@Fecha_Corte)=6 then 2&#xA;  else 1 end as NUM_PER)&#xA;&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.003'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '2030000' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.004'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '2060000' or ID_CUENTA like '2090000' ) and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.005'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '2800000' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.006'  AS ID_INDICADOR,sum( 0) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA=7000000 and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.007'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA = 2310001 and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.002'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.003' or ID_INDICADOR='IECOBALA.004'  or ID_INDICADOR='IECOBALA.005' or ID_INDICADOR='IECOBALA.006' or ID_INDICADOR='IECOBALA.007' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.009'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '2100000' or ID_CUENTA like '2110000' ) and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.010'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '2120000' or ID_CUENTA like '2130000'  or ID_CUENTA like '2140000' or ID_CUENTA like '2150000' or ID_CUENTA like '2160000' or ID_CUENTA like '2170000'  or ID_CUENTA like '2190000'   ) and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.011'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA=2310000 and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.012'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '2810000' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.013'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '2910000' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.014'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '2390000' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.008'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.009' or ID_INDICADOR='IECOBALA.010'  or ID_INDICADOR='IECOBALA.011' or ID_INDICADOR='IECOBALA.012' or ID_INDICADOR='IECOBALA.013'  or ID_INDICADOR='IECOBALA.014') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.016'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '2400000' or ID_CUENTA like '2490000'  or ID_CUENTA like '2500000') and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.017'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '2540000'  and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.018'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '2520000' or ID_CUENTA like '2540000'  or ID_CUENTA like '2560000' or ID_CUENTA like '2600000' or ID_CUENTA like '2720000') and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.019'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '2900000' or ID_CUENTA like '2930000' ) and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.020'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '2200000' or ID_CUENTA like '2210000' ) and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.021'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '2820000'  and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.015'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.016' or ID_INDICADOR='IECOBALA.017'  or ID_INDICADOR='IECOBALA.018' or ID_INDICADOR='IECOBALA.019' or ID_INDICADOR='IECOBALA.020'  or ID_INDICADOR='IECOBALA.021') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.022'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '4740000' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.001'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.002' or ID_INDICADOR='IECOBALA.008'  or ID_INDICADOR='IECOBALA.015' or ID_INDICADOR='IECOBALA.022') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.025'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '3210000' or ID_CUENTA like '3900000' ) and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.026'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '3130000' or ID_CUENTA like '3200000'  or ID_CUENTA like '3910000' or ID_CUENTA like '3100000' ) and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.027'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '3300000' or ID_CUENTA like '3400000' or ID_CUENTA like '3930000' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.028'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '3500000' or ID_CUENTA like '3950000' ) and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.029'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '4070000'  and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.030'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '4980000' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.024'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.025' or ID_INDICADOR='IECOBALA.026'  or ID_INDICADOR='IECOBALA.027' or ID_INDICADOR='IECOBALA.028'  or ID_INDICADOR='IECOBALA.029' or ID_INDICADOR='IECOBALA.030') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.032'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '4300000' or ID_CUENTA like '4340000' or ID_CUENTA like '4350000' ) and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.033'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '4330000' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.034'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '4400000' or ID_CUENTA like '4490000'  or ID_CUENTA like '5520000') and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.035'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '4720000' or ID_CUENTA like '4730000'  or ID_CUENTA like '4709%' ) and ID_MES=convert(date,@Fecha_Corte, 103) ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.036'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like  '47000000' or  ID_CUENTA like  '47010000'  or ID_CUENTA like  '47020000'  or ID_CUENTA like  '47030000' or  ID_CUENTA like  '47040000'  or ID_CUENTA like  '47050000' or ID_CUENTA like  '47060000' or  ID_CUENTA like  '47070000'  or ID_CUENTA like  '47080010000' or ID_CUENTA like  '47080020000'  or ID_CUENTA like  '47080030000'  or ID_CUENTA like  '47080040000'  or ID_CUENTA like '471%' ) and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.037'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '5440000' or ID_CUENTA like '4600000' ) and ID_MES=convert(date,@Fecha_Corte, 103)   ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.038'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '1030000'  and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.039'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '4900000'  and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.031'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.032' or ID_INDICADOR='IECOBALA.033'  or ID_INDICADOR='IECOBALA.034' or ID_INDICADOR='IECOBALA.035'  or ID_INDICADOR='IECOBALA.036' or ID_INDICADOR='IECOBALA.037'  or ID_INDICADOR='IECOBALA.038'  or ID_INDICADOR='IECOBALA.039') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.041'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '5650000' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.040'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.041' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::F_CORTE"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Carga H_INDICADORES_BAL_ACU_MASAS_2_2"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Carga H_ECOFIN_AF"
      DTS:DTSID="{6474397f-e12b-4db3-9c74-47058c720bb3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Carga H_INDICADORES_BAL_ACU_MASAS_2_2"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6A8FAA23-A9FC-401C-B6FA-529E1B0B6DAC}"
          SQLTask:SqlStatementSource="declare @Fecha_Corte date, @NUM_PER int&#xA;set @Fecha_Corte=?&#xA;set @NUM_PER=(select case when month(@Fecha_Corte)=3 then 3   when month(@Fecha_Corte)=6 then 2  else 1 end as NUM_PER)&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.042'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.002' or ID_INDICADOR='IECOBALA.008'  or ID_INDICADOR='IECOBALA.015' or ID_INDICADOR='IECOBALA.022') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.044'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '5400000' or ID_CUENTA like '5700000' or ID_CUENTA like '5720000')  and ID_MES=convert(date,@Fecha_Corte, 103)   ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.043'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '4740000' )  and ID_MES=convert(date,@Fecha_Corte, 103)   ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.023'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.024' or ID_INDICADOR='IECOBALA.031'  or ID_INDICADOR='IECOBALA.040' or ID_INDICADOR='IECOBALA.042' or ID_INDICADOR='IECOBALA.043') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.045'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.001' or ID_INDICADOR='IECOBALA.023' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.049'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '1000000' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.050'  AS ID_INDICADOR,sum( 0) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA=7000000 and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.051'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '1100000' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.048'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.049' or ID_INDICADOR='IECOBALA.050' or ID_INDICADOR='IECOBALA.051' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.053'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '1120000' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.054'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '1130000' or ID_CUENTA like '1140000' or ID_CUENTA like '1190000' or ID_CUENTA like '1210000' or ID_CUENTA like '1290000' )  and ID_MES=convert(date,@Fecha_Corte, 103) ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.052'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.053' or ID_INDICADOR='IECOBALA.054' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.055'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '60000' or ID_CUENTA like '70000') and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.047aa'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.048' or ID_INDICADOR='IECOBALA.052' or ID_INDICADOR='IECOBALA.055') and ID_MES=convert(date,'31/12/'+convert(varchar,year(@Fecha_Corte)-1),103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.047'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.048' or ID_INDICADOR='IECOBALA.052' or ID_INDICADOR='IECOBALA.055') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.056'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '1300000' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.046'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.047' or ID_INDICADOR='IECOBALA.056' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.059'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '1420000' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.058'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.059' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.061'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '1700000' or ID_CUENTA like '1710000') and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.062'  AS ID_INDICADOR,sum( 0) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA=7000000 and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.063'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '1800000' or ID_CUENTA like '1840000' or ID_CUENTA like '1850000') and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.060'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.061' or ID_INDICADOR='IECOBALA.062' or ID_INDICADOR='IECOBALA.063') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.064'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '4790000' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.057'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.058' or ID_INDICADOR='IECOBALA.060' or ID_INDICADOR='IECOBALA.064' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.066'  AS ID_INDICADOR,sum( 0) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA=7000000 and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.067'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '4970000' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.069'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '5200000' or ID_CUENTA like '5270000') and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.070'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '5220000' or ID_CUENTA like '5250000') and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.071'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '5600000' or ID_CUENTA like '5550000') and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.072'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '4060000' or ID_CUENTA like '5210000') and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.073'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '5510000' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.068'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.069' or ID_INDICADOR='IECOBALA.070' or ID_INDICADOR='IECOBALA.071' or ID_INDICADOR='IECOBALA.072'  or ID_INDICADOR='IECOBALA.073'  ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.075'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '4000000' or ID_CUENTA like '4010000' or ID_CUENTA like '4040000') and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.076'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '4030000' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.077'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '4650000' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.078'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '475%' or ID_CUENTA like '476%' or ID_CUENTA like '477%') and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.079'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '4380000' or ID_CUENTA like '4850000') and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.074'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.075' or ID_INDICADOR='IECOBALA.076' or ID_INDICADOR='IECOBALA.077' or ID_INDICADOR='IECOBALA.078'  or ID_INDICADOR='IECOBALA.079'  ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.065'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.066' or ID_INDICADOR='IECOBALA.067' or ID_INDICADOR='IECOBALA.068' or ID_INDICADOR='IECOBALA.074' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOBALA.080'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.046' or ID_INDICADOR='IECOBALA.057' or ID_INDICADOR='IECOBALA.065' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::F_CORTE"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Carga H_INDICADORES_CUENTA_RES"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Carga H_ECOFIN_AF"
      DTS:DTSID="{34250b4b-de6e-419a-8515-79cce34394df}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Carga H_INDICADORES_CUENTA_RES"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6A8FAA23-A9FC-401C-B6FA-529E1B0B6DAC}"
          SQLTask:SqlStatementSource="declare @Fecha_Corte date, @NUM_PER int&#xA;set @Fecha_Corte=?&#xA;set @NUM_PER=(select case when month(@Fecha_Corte)=3 then 3 when month(@Fecha_Corte)=6 then 2 else 1 end as NUM_PER)&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.001'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA=7000000 and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.002'  AS ID_INDICADOR,sum( SALDO) as NUM, 0 as DEN from H_ECOFIN_MOVIMIENTOS where ID_CUENTA=7460000  and GRUPO_ASIGNACION_ACT='PROMOCIONES' and ID_TIPO_ELEMENTO = 0  and F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.003'  AS ID_INDICADOR,sum( SALDO) as NUM, 0 as DEN from H_ECOFIN_MOVIMIENTOS where ID_CUENTA=6100001  and ID_TIPO_ELEMENTO = 0 and F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.004'   AS id_indicador, sum(num) as num, 0 as DEN from( SELECT 'IECOCUEN.004'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.001' or ID_INDICADOR='IECOCUEN.002') and ID_MES=convert(date,@Fecha_Corte, 103)    union all SELECT 'IECOCUEN.004'  AS ID_INDICADOR, -sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.003' ) and ID_MES=convert(date,@Fecha_Corte, 103)  )aux2  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.005'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA=7000001 or ID_CUENTA=7000002 or ID_CUENTA=7000003) and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.006'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA=7010000 and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.007'  AS ID_INDICADOR,sum( SALDO) as NUM, 0 as DEN from H_ECOFIN_MOVIMIENTOS where ID_CUENTA=7460000   and GRUPO_ASIGNACION_ACT='PROMOCIONES' and ID_TIPO_ELEMENTO in (1,2,3)  and F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.008'  AS ID_INDICADOR,sum( SALDO) as NUM, 0 as DEN from H_ECOFIN_MOVIMIENTOS where ID_CUENTA=6100001 and ID_TIPO_ELEMENTO in(1,2,3) and F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.009'   AS id_indicador, sum(num) as num, 0 as DEN from( SELECT 'IECOCUEN.009'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.005' or ID_INDICADOR='IECOCUEN.006' or ID_INDICADOR='IECOCUEN.007') and ID_MES=convert(date,@Fecha_Corte, 103)    union all SELECT 'IECOCUEN.009'  AS ID_INDICADOR, -sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.008' ) and ID_MES=convert(date,@Fecha_Corte, 103)  )aux2  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.010'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA=7020000 and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.011'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA=6820000 and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.012'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA=7690001 and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.013'  AS ID_INDICADOR,sum( IMPORTE_HABER) as NUM, 0 as DEN from H_ECOFIN_MOVIMIENTOS where ID_CUENTA=7700000 and ID_TIPO_PROCEDENCIA_MOV=1 and F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.014'  AS ID_INDICADOR,sum( IMPORTE_DEBE) as NUM, 0 as DEN from H_ECOFIN_MOVIMIENTOS where ID_CUENTA=7700000  and ID_TIPO_PROCEDENCIA_MOV=1 and F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.015'  AS ID_INDICADOR,sum( COSTE) as NUM, 0 as DEN from h_ecofin_movimientos mov left join h_ecofin_af af on mov.ID_CUENTA_CONTRAPARTIDA=af.id_af where (ID_CUENTA like '7700000' and id_cuenta_contrapartida like 'AF%') and F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.016'  AS ID_INDICADOR,sum( AMORTIZACION) as NUM, 0 as DEN from h_ecofin_movimientos mov left join h_ecofin_af af on mov.ID_CUENTA_CONTRAPARTIDA=af.id_af where (ID_CUENTA like '7700000' and id_cuenta_contrapartida like 'AF%') and F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.017'  AS ID_INDICADOR,sum( SALDO) as NUM, 0 as DEN from H_ECOFIN_MOVIMIENTOS where ID_CUENTA=7460000  and GRUPO_ASIGNACION_ACT='AROC'   and F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.018'   AS id_indicador, sum(num) as num, 0 as DEN from( SELECT 'IECOCUEN.018'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.013' or ID_INDICADOR='IECOCUEN.016' ) and ID_MES=convert(date,@Fecha_Corte, 103)    union all SELECT 'IECOCUEN.018'  AS ID_INDICADOR, -sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.014' or ID_INDICADOR='IECOCUEN.015') and ID_MES=convert(date,@Fecha_Corte, 103)  )aux2  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.019'   AS id_indicador, sum(num) as num, 0 as DEN from( SELECT 'IECOCUEN.019'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.010' or ID_INDICADOR='IECOCUEN.012'   or ID_INDICADOR='IECOCUEN.018') and ID_MES=convert(date,@Fecha_Corte, 103)    union all SELECT 'IECOCUEN.019'  AS ID_INDICADOR, -sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.011') and ID_MES=convert(date,@Fecha_Corte, 103)  )aux2  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.020'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '704%' or ID_CUENTA like '705%'  or ID_CUENTA like '740%'  or ID_CUENTA like '755%'  or ID_CUENTA like '7590000' or ID_CUENTA like '7780000' or ID_CUENTA like '7790000'  )and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.021'   AS id_indicador, sum(num) as num, 0 as DEN from( SELECT 'IECOCUEN.021'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '601%' or ID_CUENTA like '602%'  or ID_CUENTA like '603%'  or ID_CUENTA like '606%'  or ID_CUENTA like '607%' or ID_CUENTA like '610%' or ID_CUENTA like '6700000' or ID_CUENTA like '671%' or ID_CUENTA like '678%' or ID_CUENTA like '679%'  or ID_CUENTA like '7100000' or ID_CUENTA like '7120000' or ID_CUENTA like '7380000')and ID_MES=convert(date,@Fecha_Corte, 103)   union all SELECT 'IECOCUEN.021'  AS ID_INDICADOR, -sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '6100001' or ID_CUENTA like '6100002'  )and ID_MES=convert(date,@Fecha_Corte, 103))aux2  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.022'   AS id_indicador, sum(num) as num, 0 as DEN from( SELECT 'IECOCUEN.022'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '64%'  )and ID_MES=convert(date,@Fecha_Corte, 103)  union all SELECT 'IECOCUEN.022'  AS ID_INDICADOR, -sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '7100000'  )and ID_MES=convert(date,@Fecha_Corte, 103))aux2  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.023'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '62%' or ID_CUENTA like '631%') and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.024'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (id_cuenta = '6900000' or id_cuenta like '6910000'  or id_cuenta like '6920000' or id_cuenta like '6930000' or id_cuenta like '6940000' or id_cuenta like '6950000'  or id_cuenta like   '6970000' or id_cuenta like '6980000' or id_cuenta like '79%' or id_cuenta like '650%') and ID_MES=convert(date,@Fecha_Corte, 103) ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.025'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '680%' or ID_CUENTA like '681%'  or ID_CUENTA =6820001)and ID_MES=convert(date,@Fecha_Corte, 103) ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.026'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.004' or ID_INDICADOR='IECOCUEN.009' or ID_INDICADOR='IECOCUEN.019'  or ID_INDICADOR='IECOCUEN.020' or ID_INDICADOR='IECOCUEN.021' or ID_INDICADOR='IECOCUEN.022'  or ID_INDICADOR='IECOCUEN.023' or ID_INDICADOR='IECOCUEN.024' or ID_INDICADOR='IECOCUEN.025' or ID_INDICADOR='IECOCUEN.026' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.027'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '7600000' or ID_CUENTA like '7680000'  or ID_CUENTA = 7690000)and ID_MES=convert(date,@Fecha_Corte, 103) ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.028'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '661%' or ID_CUENTA like '662%'  or ID_CUENTA like '6680000'  or ID_CUENTA like '669%' )and ID_MES=convert(date,@Fecha_Corte, 103) ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.029'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '660%' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.030'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '696%' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.031'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.027' or ID_INDICADOR='IECOCUEN.028' or ID_INDICADOR='IECOCUEN.029' or ID_INDICADOR='IECOCUEN.030' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.032'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.031' or ID_INDICADOR='IECOCUEN.026' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.033'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '630%' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.034'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.032' or ID_INDICADOR='IECOCUEN.033' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCUEN.035'   AS id_indicador, sum(num) as num, 0 as DEN from( SELECT 'IECOCUEN.035'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.034'  ) and ID_MES=convert(date,@Fecha_Corte, 103)    union all SELECT 'IECOCUEN.035'  AS ID_INDICADOR, -sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.029' or ID_INDICADOR='IECOCUEN.030' or ID_INDICADOR='IECOCUEN.025'  or ID_INDICADOR='IECOCUEN.024' or ID_INDICADOR='IECOCUEN.016' or ID_INDICADOR='IECOCUEN.013'  or ID_INDICADOR='IECOCUEN.011' ) and ID_MES=convert(date,@Fecha_Corte, 103)  )aux2  ) aux GROUP BY ID_INDICADOR&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::F_CORTE"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Carga H_INDICADORES_RESTO_1_2"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Carga H_ECOFIN_AF"
      DTS:DTSID="{52be6f72-3d01-4be3-b469-e8f6d9d28a45}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Carga H_INDICADORES_RESTO_1_2"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6A8FAA23-A9FC-401C-B6FA-529E1B0B6DAC}"
          SQLTask:SqlStatementSource="declare @Fecha_Corte date, @NUM_PER int&#xA;set @Fecha_Corte=?&#xA;set @NUM_PER=(select case when month(@Fecha_Corte)=3 then 3   when month(@Fecha_Corte)=6 then 2  else 1 end as NUM_PER)&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECORENVM.001'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.004' ) and ID_MES=convert(date,@Fecha_Corte, 103)  union all SELECT 'IECORENVM.001'  AS ID_INDICADOR,0 as NUM, sum(CIERRE_PERIODO) as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.001' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECORENVM.002'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.009' ) and ID_MES=convert(date,@Fecha_Corte, 103)  union all SELECT 'IECORENVM.002'  AS ID_INDICADOR,0 as NUM, sum(CIERRE_PERIODO) as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.005' or ID_INDICADOR='IECOCUEN.006') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECORENVM.003'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.018' ) and ID_MES=convert(date,@Fecha_Corte, 103)  union all SELECT 'IECORENVM.003'  AS ID_INDICADOR,0 as NUM, sum(CIERRE_PERIODO) as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.013') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECORENVM.004'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.018' ) and ID_MES=convert(date,@Fecha_Corte, 103)  union all SELECT 'IECORENVM.004'  AS ID_INDICADOR,0 as NUM, sum(CIERRE_PERIODO) as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.013') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOEHB.001'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.057' or ID_INDICADOR='IECOBALA.065' ) and ID_MES=convert(date,@Fecha_Corte, 103)  union all SELECT 'IECOEHB.001'  AS ID_INDICADOR,0 as NUM, sum(CIERRE_PERIODO) as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.080') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOEHB.002'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '170%' or ID_CUENTA like '171%' or ID_CUENTA like '520%' or ID_CUENTA like '527%' or ID_CUENTA like '406%' or ID_CUENTA like '521%') and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOEHB.002aa'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '170%' or ID_CUENTA like '171%' or ID_CUENTA like '520%' or ID_CUENTA like '527%' or ID_CUENTA like '406%' or ID_CUENTA like '521%') and ID_MES=convert(date,'31/12/'+convert(varchar,year(@Fecha_Corte)-1),103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOEHB.003'  AS ID_INDICADOR,sum( 2*CIERRE_PERIODO*@NUM_PER) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.028' ) and ID_MES=convert(date,@Fecha_Corte, 103)  union all SELECT 'IECOEHB.003'  AS ID_INDICADOR,0 as NUM, sum(CIERRE_PERIODO) as DEN from H_INDICADORES where ((ID_INDICADOR='IECOEHB.002' or ID_INDICADOR='IECOEHB.002aa') and ID_MES=convert(date,@Fecha_Corte, 103)  ) or (ID_INDICADOR='IECOEHB.002' or ID_INDICADOR='IECOEHB.002aa') and ID_MES=convert(date,'31/12/'+convert(varchar,year(ID_MES)-1),103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOEHB.004'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.023' ) and ID_MES=convert(date,@Fecha_Corte, 103)  union all SELECT 'IECOEHB.004'  AS ID_INDICADOR,0 as NUM, sum(CIERRE_PERIODO) as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.065') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCFE.001'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.001' or ID_INDICADOR='IECOCUEN.005'  or ID_INDICADOR='IECOCUEN.006' or ID_INDICADOR='IECOCUEN.010'  or ID_INDICADOR='IECOCUEN.013') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCFE.002'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '759%' or ID_CUENTA like '705%') and ID_MES=convert(date,@Fecha_Corte, 103) ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCFE.003'  AS ID_INDICADOR,sum( IMPORTE_HABER) as NUM, 0 as DEN from H_ECOFIN_MOVIMIENTOS where (ID_CUENTA like '740%'  or ID_CUENTA like '4708%'  or ID_CUENTA like '130%' or ID_CUENTA like '746%' or ID_CUENTA like '7590000' or ID_CUENTA like '6490000') and  COBRO_SUBVENCION=1 and F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCFE.004'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '76%' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCFE.005'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCFE.001' or ID_INDICADOR='IECOCFE.002'  or ID_INDICADOR='IECOCFE.003' or ID_INDICADOR='IECOCFE.004' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCFE.006'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '601%' or ID_CUENTA like '602%' or ID_CUENTA like '603%' or ID_CUENTA like '604%') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCFE.007'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA like '606%' or ID_CUENTA like '607%') and ID_MES=convert(date,@Fecha_Corte, 103) ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCFE.008'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '62%' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCFE.009'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '64%' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCFE.010'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '66%'  and ID_CUENTA not like '660%' and ID_MES=convert(date,@Fecha_Corte, 103) ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCFE.011'  AS ID_INDICADOR,sum( SALDO) as NUM, 0 as DEN from H_ECOFIN_MOVIMIENTOS where ID_CUENTA like '4752000' and COBRO_SUBVENCION=1 and F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCFE.012'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCFE.006' or ID_INDICADOR='IECOCFE.007'  or ID_INDICADOR='IECOCFE.008' or ID_INDICADOR='IECOCFE.009' or ID_INDICADOR='IECOCFE.010' or ID_INDICADOR='IECOCFE.011' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOCFE.013'   AS id_indicador, sum(num) as num, 0 as DEN from( SELECT 'IECOCFE.013'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCFE.005' ) and ID_MES=convert(date,@Fecha_Corte, 103)    union all SELECT 'IECOCFE.013'  AS ID_INDICADOR, -sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCFE.012') and ID_MES=convert(date,@Fecha_Corte, 103)  )aux2  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOFAF.001'  AS ID_INDICADOR,sum( IMPORTE_HABER) as NUM, 0 as DEN from H_ECOFIN_MOVIMIENTOS where (ID_CUENTA like '520%'  or ID_CUENTA  like '170%') AND COD_PROC_ENTRADA like 'CDTO%' and  COD_PROC_ENTRADA not like 'CDTO000115'  and  COD_PROC_ENTRADA not like 'CDTO000116'   and F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOFAF.002'  AS ID_INDICADOR,sum( IMPORTE_DEBE) as NUM, 0 as DEN from H_ECOFIN_MOVIMIENTOS where (ID_CUENTA like '520%'  or ID_CUENTA  like '170%') AND COD_PROC_ENTRADA like 'CDTO%' and  COD_PROC_ENTRADA not like 'CDTO000115'  and  COD_PROC_ENTRADA not like 'CDTO000116'   and F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOFAF.003'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOFAF.001'  or ID_INDICADOR='IECOFAF.002' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOFAF.004'  AS ID_INDICADOR,sum( IMPORTE_HABER) as NUM, 0 as DEN from H_ECOFIN_MOVIMIENTOS where (ID_CUENTA like '520%'  or ID_CUENTA  like '170%') AND  ( COD_PROC_ENTRADA like 'CDTO000115'  or COD_PROC_ENTRADA  like 'CDTO000116') and  F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOFAF.005'  AS ID_INDICADOR,sum( IMPORTE_DEBE) as NUM, 0 as DEN from H_ECOFIN_MOVIMIENTOS where (ID_CUENTA like '520%'  or ID_CUENTA  like '170%') AND  ( COD_PROC_ENTRADA like 'CDTO000115'  or COD_PROC_ENTRADA  like 'CDTO000116') and F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOFAF.006'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOFAF.004'  or ID_INDICADOR='IECOFAF.005' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOFAF.007'  AS ID_INDICADOR,sum( IMPORTE_HABER) as NUM, 0 as DEN from H_ECOFIN_MOVIMIENTOS where (ID_CUENTA like '406%'  or ID_CUENTA  like '521%') AND   COD_PROC_ENTRADA like 'LDTO%'    and F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOFAF.008'  AS ID_INDICADOR,sum( IMPORTE_DEBE) as NUM, 0 as DEN from H_ECOFIN_MOVIMIENTOS where (ID_CUENTA like '406%'  or ID_CUENTA  like '521%') AND   COD_PROC_ENTRADA like 'LDTO%'     and F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOFAF.009'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOFAF.007'  or ID_INDICADOR='IECOFAF.008' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOFAF.010'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA=7000000 and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOFAF.011'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOFAF.003'  or ID_INDICADOR='IECOFAF.006' or ID_INDICADOR='IECOFAF.009'  or ID_INDICADOR='IECOFAF.010') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::F_CORTE"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Carga H_INDICADORES_RESTO_2_2"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Carga H_ECOFIN_AF"
      DTS:DTSID="{79cd0ecb-09db-4d3a-9735-0531480ce2a1}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Carga H_INDICADORES_RESTO_2_2"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6A8FAA23-A9FC-401C-B6FA-529E1B0B6DAC}"
          SQLTask:SqlStatementSource="declare @Fecha_Corte date, @NUM_PER int&#xA;&#xA;set @Fecha_Corte=?&#xA;set @NUM_PER=(select case when month(@Fecha_Corte)=3 then 3&#xA;   when month(@Fecha_Corte)=6 then 2&#xA;  else 1 end as NUM_PER)&#xA;&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOVPELOT.001'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA=7000000 and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOVPELOT.002'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA=7000001 or ID_CUENTA=7000002 or ID_CUENTA=7000003 or ID_CUENTA=7010000) and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOVPELOT.003'   AS id_indicador, sum(num) as num, 0 as DEN from( SELECT 'IECOVPELOT.003'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.013' ) and ID_MES=convert(date,@Fecha_Corte, 103)    union all SELECT 'IECOVPELOT.003'  AS ID_INDICADOR, -sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.014') and ID_MES=convert(date,@Fecha_Corte, 103)  )aux2  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOVPELOT.004'  AS ID_INDICADOR,sum( SALDO) as NUM, 0 as DEN from H_ECOFIN_MOVIMIENTOS where (ID_CUENTA=7020000 or ID_CUENTA=7600000 or (ID_CUENTA=70500000 and GRUPO_ASIGNACION_ACT='ALQNOAROC' ))    and F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOVPELOT.005'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA like '704%' and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOVPELOT.006'  AS ID_INDICADOR,sum( SALDO) as NUM, 0 as DEN from H_ECOFIN_MOVIMIENTOS where (ID_CUENTA like '759%' or (ID_CUENTA=70500000 and GRUPO_ASIGNACION_ACT='ALQNOAROC' ))   and F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOVPELOT.007'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOVPELOT.001' or ID_INDICADOR='IECOVPELOT.002' or ID_INDICADOR='IECOVPELOT.003' or ID_INDICADOR='IECOVPELOT.004' or ID_INDICADOR='IECOVPELOT.005' or ID_INDICADOR='IECOVPELOT.006' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOAPROV.001'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where ID_CUENTA=7000000 and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOAPROV.002'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA=6010002 or ID_CUENTA=6010003 or ID_CUENTA=6010004 or ID_CUENTA=6010005 or ID_CUENTA=6010006 or ID_CUENTA like '602%' or ID_CUENTA like '603%' )  and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOAPROV.003'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA=6060000 or ID_CUENTA=6060007 ) and ID_MES=convert(date,@Fecha_Corte, 103) ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOAPROV.004'  AS ID_INDICADOR,sum( SALDO_PERIODO) as NUM, 0 as DEN from H_ECOFIN_SALDOS where (ID_CUENTA=6066005 or ID_CUENTA=6066125) and ID_MES=convert(date,@Fecha_Corte, 103)) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOAPROV.005'  AS ID_INDICADOR,sum( SALDO) as NUM, 0 as DEN from H_ECOFIN_MOVIMIENTOS where ((ID_CUENTA like '606%' and ID_CUENTA not like '6066005' and ID_CUENTA not like '6066125' and ID_CUENTA not like '6060000' and ID_CUENTA not like '6060007') or ID_CUENTA like '607%' or (ID_CUENTA like '607%' and GRUPO_ASIGNACION_ACT='PROMOCION' ))   and F_REGISTRO between convert(date,'01/01/'+convert(varchar,year(@Fecha_Corte)),103) and @Fecha_Corte ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECOAPROV.006'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOAPROV.001' or ID_INDICADOR='IECOAPROV.002' or ID_INDICADOR='IECOAPROV.003' or ID_INDICADOR='IECOAPROV.004' or ID_INDICADOR='IECOAPROV.005'  ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECORDOS.001'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.026' ) and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECORDOS.002'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.034') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECORDOS.003'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.035') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECORDOS.004'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.034') and ID_MES=convert(date,@Fecha_Corte, 103)  union all SELECT 'IECORDOS.004'  AS ID_INDICADOR,0 as NUM, sum(1) as DEN from H_INDICADORES where (ID_INDICADOR='IECOBALA.047aa') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECORDOS.005'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOEHB.004') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECORDOS.006'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.004' or ID_INDICADOR='IECOCUEN.009') and ID_MES=convert(date,@Fecha_Corte, 103)  union all SELECT 'IECORDOS.006'  AS ID_INDICADOR,0 as NUM, sum(1) as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.001' or ID_INDICADOR='IECOCUEN.005') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECORDOS.007'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.022' or ID_INDICADOR='IECOCUEN.023' or ID_INDICADOR='IECOCUEN.025') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECORDOS.008'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.001') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;insert into H_INDICADORES (F_MODIFICACION,ID_MES, ID_INDICADOR,NUMERADOR,DENOMINADOR,CIERRE_PERIODO, CIERRE_PREVISTO_ANUAL,  PORC_EJECUTADO,PRESUPUESTO_ANUAL, DIF_CIERRE_PREV_PRESUPUESTO,DESVIACION) SELECT @Fecha_Corte as F_MODIFICACION,@Fecha_Corte as ID_MES, ID_INDICADOR, coalesce(SUM(NUM),0) as NUMERADOR, SUM(DEN) as DENOMINADOR,CASE WHEN SUM(DEN)=0 THEN coalesce(SUM(NUM),0) ELSE SUM(NUM)/SUM(DEN)END AS CIERRE_PERIODO,0 AS CIERRE_PREVISTO_ANUAL, 0 AS PORC_EJECUTADO,0 AS PRESUPUESTO_ANUAL,0 AS DIF_CIERRE_PREV_PRESUPUESTO,0 AS  DESVIACION FROM (SELECT 'IECORDOS.009'  AS ID_INDICADOR,sum( CIERRE_PERIODO) as NUM, 0 as DEN from H_INDICADORES where (ID_INDICADOR='IECOCUEN.005') and ID_MES=convert(date,@Fecha_Corte, 103)  ) aux GROUP BY ID_INDICADOR&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::F_CORTE"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Carga V_ECOFIN_COMERCIAL"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Carga V_ECOFIN_COMERCIAL"
      DTS:DTSID="{b1356896-00b7-4f33-9959-3d2866ce2161}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Carga V_ECOFIN_COMERCIAL"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6A8FAA23-A9FC-401C-B6FA-529E1B0B6DAC}"
          SQLTask:SqlStatementSource="declare @Fecha_Corte date&#xA;&#xA;set @Fecha_Corte=?&#xA;&#xA;insert into V_ECOFIN_COMERCIAL&#xA;select @Fecha_Corte as ID_MES, tipo_elemento, prom, promo,  sum(num_elementos) as NUM_ELEMENTOS,tipo_vivienda,&#xA;&#x9;sum(ingresos) as ingresos, &#xA;sum(coste_venta)as coste_venta,&#xA;sum(subvenciones) as subvenciones,&#xA;sum(ingresos)-sum(coste_venta)+sum(subvenciones) as margen,&#xA;case when sum(ingresos)=0 then 0 else (sum(ingresos)-sum(coste_venta)+sum(subvenciones))/sum(ingresos) end as POR_CENTAS&#xA;  from(&#xA;select  desc_tipo_elemento as TIPO_ELEMENTO, &#xA; PROM,&#xA; PROMO, tipo_vivienda,&#xA;sum(num_elementos) as NUM_ELEMENTOS,&#xA;&#x9;sum(ingresos) as ingresos, &#xA;sum(coste_venta)as coste_venta,&#xA;sum(subvenciones) as subvenciones,&#xA;sum(ingresos)-sum(coste_venta)+sum(subvenciones) as margen,&#xA;case when sum(ingresos)= 0 then 0 else (sum(ingresos)-sum(coste_venta)+sum(subvenciones))/sum(ingresos) end as POR_VENTAS&#xA;from (select act.id_elemento, pro.ID_PROMOCION, act.id_tipo_elemento as id_tipo_elemento,desc_tipo_elemento as TIPO_ELEMENTO, &#xA;case when act.id_tipo_elemento &lt;&gt; 0 and desc_tipo_elemento='Garaje' then null&#xA;&#x9;when act.id_tipo_elemento &lt;&gt; 0 and desc_tipo_elemento='Local' then null&#xA;&#x9;when act.id_tipo_elemento &lt;&gt; 0 and desc_tipo_elemento='Trastero' then null&#xA;    else  pro.PROMOCION_CORTO end as PROM,&#xA;case when act.id_tipo_elemento &lt;&gt; 0 and desc_tipo_elemento='Garaje' then 'VENTA GARAJES LIBRES'&#xA;&#x9;when act.id_tipo_elemento &lt;&gt; 0 and desc_tipo_elemento='Local' then 'VENTA LOCALES'&#xA;&#x9;when act.id_tipo_elemento &lt;&gt; 0 and desc_tipo_elemento='Trastero' then 'VENTA TRASTEROS'&#xA;&#x9;else pro.DESC_PROMOCION end as PROMO,&#xA;case when act.id_tipo_elemento &lt;&gt; 0  then null&#xA;&#x9;else DESC_CORTA_TIPO_VIVIENDA end as TIPO_VIVIENDA,&#xA;case when act.id_tipo_elemento &lt;&gt; 0 and ELEMENTO_LIBRE=1 then sum(1) &#xA;&#x9;&#x9;when act.id_tipo_elemento=0 then sum (1)&#xA;&#x9;&#x9;else 0 end as NUM_ELEMENTOS &#xA;&#x9;&#x9;from H_COMERCIAL_ACTIVIDAD act&#xA;left join V_J_PROYECTO pro on (act.ID_ELEMENTO=pro.ID_ELEMENTO)&#xA;left join M_TIPO_ELEMENTO tipoe on (act.ID_TIPO_ELEMENTO=tipoe.ID_TIPO_ELEMENTO)&#xA;left join M_TIPO_VIVIENDA tipov on (act.ID_TIPO_VIVIENDA=tipov.ID_TIPO_VIVIENDA)&#xA;where  act.id_mes in (select max(id_mes) from H_COMERCIAL_ACTIVIDAD)&#xA;and act.FECHA_ESCRITURA  between convert(date,'01/01/'+convert(varchar,year(ID_MES)),103) and ID_MES &#xA;and act.id_estado=9 &#xA;group by   act.id_elemento,pro.ID_PROMOCION,act.id_tipo_elemento,desc_tipo_elemento,DESC_CORTA_TIPO_VIVIENDA,pro.DESC_PROMOCION,pro.PROMOCION_CORTO, act.id_tipo_elemento, ELEMENTO_LIBRE&#xA;) act &#xA;left join ( Select id_elemento,id_promocion, ID_TIPO_ELEMENTO,&#xA;sum(ingresos) as ingresos, &#xA;sum(coste_venta)as coste_venta,&#xA;sum(subvenciones) as subvenciones&#xA;from(&#xA;select  id_elemento,[ID_PROMOCION] as id_promocion,&#xA;ID_TIPO_ELEMENTO as id_tipo_elemento,&#xA;case when ID_CUENTA in (7000000, 7000001,7000002,7000003) then sum(SALDO)&#xA;&#x9;else 0 end as INGRESOS,&#xA;&#x9;case when ID_CUENTA=6100000  then sum(SALDO)&#xA;&#x9;else 0 end as COSTE_VENTA,&#xA;&#x9;&#x9;case when ID_CUENTA=7460000  then sum(SALDO)&#xA;&#x9;else 0 end as SUBVENCIONES&#xA;&#x9;&#x9;from H_ECOFIN_MOVIMIENTOS&#x9;&#xA;&#x9;&#x9;where F_REGISTRO between convert(date,'01/01/'+convert(varchar,year( @Fecha_Corte)),103) and  @Fecha_Corte &#xA;&#x9;&#x9;group by id_elemento, [ID_PROMOCION],ID_TIPO_ELEMENTO ,ID_CUENTA&#xA;&#x9;&#x9;&#x9;)aux group by id_elemento,id_promocion,ID_TIPO_ELEMENTO&#xA;) eco on (act.id_promocion=eco.ID_promocion and act.ID_ELEMENTO=eco.ID_ELEMENTO and act.ID_TIPO_ELEMENTO=eco.ID_TIPO_ELEMENTO)&#xA;left join J_P04_PROMOCION pro on (act.ID_PROMOCION=pro.ID_PROMOCION)&#xA;left join M_TIPO_ELEMENTO tipoe on (act.ID_TIPO_ELEMENTO=tipoe.ID_TIPO_ELEMENTO)&#xA;group by desc_tipo_elemento,prom, promo, act.id_tipo_elemento, tipo_vivienda&#xA;)aux &#xA;group by tipo_elemento, prom, promo, tipo_vivienda&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::F_CORTE"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="7"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Tarea de procesamiento de Analysis Services"
      DTS:CreationName="Microsoft.DTSProcessingTask"
      DTS:Description="Tarea de procesamiento de Analysis Services"
      DTS:DTSID="{5CE0B75B-CE18-44F4-855C-EB750BCACBA4}"
      DTS:ExecutableType="Microsoft.DTSProcessingTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Tarea de procesamiento de Analysis Services"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ASProcessingData
          ConnectionName="SRVSQLBI\VISESABI.VISESABI 1"
          ProcessingCommands="&lt;Batch xmlns=&quot;http://schemas.microsoft.com/analysisservices/2003/engine&quot;&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M TIPO CONTRAPARTIDA&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M CATEGORIA REGISTRO&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M TIPO REGISTRO AF&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M GR CONTAB NEGOCIO&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M TIPO ELEMENTO&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M METODO AMORTIZACION&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M TIPO BIEN&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;J P06 ELEMENTO 1&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M ORIGEN ENTRADA&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;J TIEMPO&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M MODALIDAD IRPF&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M TIPO PROC MOV CONTABLE&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M TIPO MOVIMIENTO AF&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M TIPO GASTO&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M TIPO DOCUMENTO&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M TIPO IVA&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M CUENTAS CONTABLES&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M VAT GR CONTAB PRODUCTO&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;J P04 PROMOCION&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M VAT GR CONTAB NEGOCIO&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M RESIDENCIA&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M NO SERIES&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M INDICADORES&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;Cuenta contrapartida&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;DimensionID&gt;M GR CONTAB PRODUCTO&lt;/DimensionID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessUpdate&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;&lt;/Batch&gt;" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Tarea de procesamiento de Analysis Services 1"
      DTS:CreationName="Microsoft.DTSProcessingTask"
      DTS:Description="Tarea de procesamiento de Analysis Services"
      DTS:DTSID="{36D8CB24-2893-47EE-8F3A-43A23E413573}"
      DTS:ExecutableType="Microsoft.DTSProcessingTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Tarea de procesamiento de Analysis Services 1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <ASProcessingData
          ConnectionName="SRVSQLBI\VISESABI.VISESABI 1"
          ProcessingCommands="&lt;Batch xmlns=&quot;http://schemas.microsoft.com/analysisservices/2003/engine&quot;&gt;&#xA;  &lt;Process xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ddl2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2&quot; xmlns:ddl2_2=&quot;http://schemas.microsoft.com/analysisservices/2003/engine/2/2&quot; xmlns:ddl100_100=&quot;http://schemas.microsoft.com/analysisservices/2008/engine/100/100&quot; xmlns:ddl200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200&quot; xmlns:ddl200_200=&quot;http://schemas.microsoft.com/analysisservices/2010/engine/200/200&quot; xmlns:ddl300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300&quot; xmlns:ddl300_300=&quot;http://schemas.microsoft.com/analysisservices/2011/engine/300/300&quot; xmlns:ddl400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400&quot; xmlns:ddl400_400=&quot;http://schemas.microsoft.com/analysisservices/2012/engine/400/400&quot; xmlns:ddl500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500&quot; xmlns:ddl500_500=&quot;http://schemas.microsoft.com/analysisservices/2013/engine/500/500&quot;&gt;&#xA;    &lt;Object&gt;&#xA;      &lt;DatabaseID&gt;VISESABI&lt;/DatabaseID&gt;&#xA;      &lt;CubeID&gt;Ecofin&lt;/CubeID&gt;&#xA;    &lt;/Object&gt;&#xA;    &lt;Type&gt;ProcessDefault&lt;/Type&gt;&#xA;    &lt;WriteBackTableCreation&gt;UseExisting&lt;/WriteBackTableCreation&gt;&#xA;  &lt;/Process&gt;&#xA;&lt;/Batch&gt;" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{da0d5bbc-daf8-4902-a7ca-b0c52b7b6eb0}"
      DTS:From="Package\Borra H_ECOFIN_MOVIMIENTOS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Carga H_ECOFIN_MOVIMIENTOS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{4921ee2c-8f4f-4ec2-8204-4a363fb6af37}"
      DTS:From="Package\Borra H_ECOFIN_SALDOS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Carga H_ECOFIN_SALDOS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10]"
      DTS:CreationName=""
      DTS:DTSID="{58F0A17C-D5EA-4362-8503-F3D1B7492EE8}"
      DTS:From="Package\Borra H_ECOFIN_AF"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 10"
      DTS:To="Package\Borra V_ECOFIN_COMERCIAL" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 11]"
      DTS:CreationName=""
      DTS:DTSID="{B953EFAF-C2EE-4A43-B9BC-9D7E4C8609D4}"
      DTS:From="Package\Carga V_ECOFIN_COMERCIAL"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 11"
      DTS:To="Package\Borra H_INDICADORES" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 12]"
      DTS:CreationName=""
      DTS:DTSID="{EB132075-F95E-47C7-8EBB-789E4BC35FCC}"
      DTS:From="Package\Carga H_INDICADORES_RESTO_2_2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 12"
      DTS:To="Package\Tarea de procesamiento de Analysis Services" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 13]"
      DTS:CreationName=""
      DTS:DTSID="{3A066C94-9E20-4FCA-8C9E-7FF7D6328A09}"
      DTS:From="Package\Tarea de procesamiento de Analysis Services"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 13"
      DTS:To="Package\Tarea de procesamiento de Analysis Services 1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{E3FBAC70-7B6F-4843-ABBB-DEA05DE6FAE4}"
      DTS:From="Package\Carga H_ECOFIN_MOVIMIENTOS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Borra H_ECOFIN_SALDOS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{6D5DF9BC-ACE6-4975-B15F-6EC841D1B05F}"
      DTS:From="Package\Borra H_ECOFIN_AF"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Carga H_ECOFIN_AF" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3 1]"
      DTS:CreationName=""
      DTS:DTSID="{f5386c8f-c9ed-44a0-b101-f723da15810d}"
      DTS:From="Package\Borra H_INDICADORES"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3 1"
      DTS:To="Package\Carga H_INDICADORES_CUENTA_RES" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{0AAFD65A-9FD9-4F3E-954D-F10AD4F94074}"
      DTS:From="Package\Carga H_ECOFIN_SALDOS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Borra H_ECOFIN_AF" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{AEE2B932-0DB5-4A2A-BF00-81A94882C0E5}"
      DTS:From="Package\Borra V_ECOFIN_COMERCIAL"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Carga V_ECOFIN_COMERCIAL" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{15648603-ED7A-44D3-A2D1-62A6ED395BEF}"
      DTS:From="Package\Carga H_INDICADORES_CUENTA_RES"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Carga H_INDICADORES_BAL_ACU_MASAS_1_2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{50D8ACBF-889C-423F-BFB0-1D157B8AF89B}"
      DTS:From="Package\Carga H_INDICADORES_BAL_ACU_MASAS_1_2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Carga H_INDICADORES_BAL_ACU_MASAS_2_2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{56882788-0EC3-4BC8-825C-4A8EA0688B2D}"
      DTS:From="Package\Carga H_INDICADORES_BAL_ACU_MASAS_2_2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Carga H_INDICADORES_RESTO_1_2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{C88E9EB0-3D7B-46B1-8F57-3FA7CEC3DDE0}"
      DTS:From="Package\Carga H_INDICADORES_RESTO_1_2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\Carga H_INDICADORES_RESTO_2_2" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="175,42"
          Id="Package\Borra H_ECOFIN_AF"
          TopLeft="147,148" />
        <NodeLayout
          Size="234,42"
          Id="Package\Borra H_ECOFIN_MOVIMIENTOS"
          TopLeft="27,31" />
        <NodeLayout
          Size="202,42"
          Id="Package\Borra H_ECOFIN_SALDOS"
          TopLeft="88,92" />
        <NodeLayout
          Size="189,42"
          Id="Package\Borra H_INDICADORES"
          TopLeft="29,288" />
        <NodeLayout
          Size="219,42"
          Id="Package\Borra V_ECOFIN_COMERCIAL"
          TopLeft="168,213" />
        <NodeLayout
          Size="179,42"
          Id="Package\Carga H_ECOFIN_AF"
          TopLeft="484,158" />
        <NodeLayout
          Size="236,42"
          Id="Package\Carga H_ECOFIN_MOVIMIENTOS"
          TopLeft="416,24.5" />
        <NodeLayout
          Size="203,42"
          Id="Package\Carga H_ECOFIN_SALDOS"
          TopLeft="442,96.5" />
        <NodeLayout
          Size="303,42"
          Id="Package\Carga H_INDICADORES_BAL_ACU_MASAS_1_2"
          TopLeft="33,348" />
        <NodeLayout
          Size="303,42"
          Id="Package\Carga H_INDICADORES_BAL_ACU_MASAS_2_2"
          TopLeft="424,354" />
        <NodeLayout
          Size="260,42"
          Id="Package\Carga H_INDICADORES_CUENTA_RES"
          TopLeft="424,295" />
        <NodeLayout
          Size="253,42"
          Id="Package\Carga H_INDICADORES_RESTO_1_2"
          TopLeft="38,410" />
        <NodeLayout
          Size="253,42"
          Id="Package\Carga H_INDICADORES_RESTO_2_2"
          TopLeft="436,413" />
        <NodeLayout
          Size="221,42"
          Id="Package\Carga V_ECOFIN_COMERCIAL"
          TopLeft="517,217" />
        <NodeLayout
          Size="290,42"
          Id="Package\Tarea de procesamiento de Analysis Services"
          TopLeft="764,395" />
        <NodeLayout
          Size="300,42"
          Id="Package\Tarea de procesamiento de Analysis Services 1"
          TopLeft="807,319" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="261,48.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="155,0"
              Start="0,0"
              End="147.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="147.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="290,115.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="152,0"
              Start="0,0"
              End="144.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="144.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10]"
          TopLeft="234.5,190">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="43,23"
              Start="0,0"
              End="43,15.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.5"
                    Point2="0,11.5"
                    Point3="4,11.5" />
                  <mssgle:LineSegment
                    End="39,11.5" />
                  <mssgle:CubicBezierSegment
                    Point1="39,11.5"
                    Point2="43,11.5"
                    Point3="43,15.5" />
                  <mssgle:LineSegment
                    End="43,15.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 11]"
          TopLeft="627.5,259">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-504,29"
              Start="0,0"
              End="-504,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.5"
                    Point2="0,14.5"
                    Point3="-4,14.5" />
                  <mssgle:LineSegment
                    End="-500,14.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-500,14.5"
                    Point2="-504,14.5"
                    Point3="-504,18.5" />
                  <mssgle:LineSegment
                    End="-504,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 12]"
          TopLeft="689,434">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75,-18"
              Start="0,0"
              End="67.5,-18">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="33.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="33.5,0"
                    Point2="37.5,0"
                    Point3="37.5,-4" />
                  <mssgle:LineSegment
                    End="37.5,-14" />
                  <mssgle:CubicBezierSegment
                    Point1="37.5,-14"
                    Point2="37.5,-18"
                    Point3="41.5,-18" />
                  <mssgle:LineSegment
                    End="67.5,-18" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 13]"
          TopLeft="909,395">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="48,-34"
              Start="0,0"
              End="48,-26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-13" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-13"
                    Point2="0,-17"
                    Point3="4,-17" />
                  <mssgle:LineSegment
                    End="44,-17" />
                  <mssgle:CubicBezierSegment
                    Point1="44,-17"
                    Point2="48,-17"
                    Point3="48,-21" />
                  <mssgle:LineSegment
                    End="48,-26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="534,66.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-345,25.5"
              Start="0,0"
              End="-345,18">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.75"
                    Point2="0,12.75"
                    Point3="-4,12.75" />
                  <mssgle:LineSegment
                    End="-341,12.75" />
                  <mssgle:CubicBezierSegment
                    Point1="-341,12.75"
                    Point2="-345,12.75"
                    Point3="-345,16.75" />
                  <mssgle:LineSegment
                    End="-345,18" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="322,174">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="162,0"
              Start="0,0"
              End="154.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="154.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3 1]"
          TopLeft="218,312.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="206,0"
              Start="0,0"
              End="198.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="198.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="442,123.166666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-120,40.1666666666667"
              Start="0,0"
              End="-112.5,40.1666666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-56,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-56,0"
                    Point2="-60,0"
                    Point3="-60,4" />
                  <mssgle:LineSegment
                    End="-60,36.1666666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="-60,36.1666666666667"
                    Point2="-60,40.1666666666667"
                    Point3="-64,40.1666666666667" />
                  <mssgle:LineSegment
                    End="-112.5,40.1666666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="387,236">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="130,0"
              Start="0,0"
              End="122.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="122.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="424,321.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-88,47.3333333333333"
              Start="0,0"
              End="-80.5,47.3333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-33.137614678899,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-33.137614678899,0"
                    Point2="-37.137614678899,0"
                    Point3="-37.137614678899,4" />
                  <mssgle:LineSegment
                    End="-37.137614678899,43.3333333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="-37.137614678899,43.3333333333333"
                    Point2="-37.137614678899,47.3333333333333"
                    Point3="-41.137614678899,47.3333333333333" />
                  <mssgle:LineSegment
                    End="-80.5,47.3333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="336,374.833333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="88,0"
              Start="0,0"
              End="80.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="80.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="424,380.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-133,50.3333333333333"
              Start="0,0"
              End="-125.5,50.3333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-52.1284403669724,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-52.1284403669724,0"
                    Point2="-56.1284403669724,0"
                    Point3="-56.1284403669724,4" />
                  <mssgle:LineSegment
                    End="-56.1284403669724,46.3333333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="-56.1284403669724,46.3333333333333"
                    Point2="-56.1284403669724,50.3333333333333"
                    Point3="-60.1284403669724,50.3333333333333" />
                  <mssgle:LineSegment
                    End="-125.5,50.3333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="291,435.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="145,0"
              Start="0,0"
              End="137.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="137.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <ConnectionManager
    design-time-name="Package.ConnectionManagers[SRVSQLBI\VISESABI.VISESABI 1]">
    <ProjectReferenceName></ProjectReferenceName>
  </ConnectionManager>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>